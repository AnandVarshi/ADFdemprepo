{
	"name": "df_innerjoin",
	"properties": {
		"folder": {
			"name": "Multiple inputs-Outputs"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Emp",
						"type": "DatasetReference"
					},
					"name": "Emp"
				},
				{
					"dataset": {
						"referenceName": "Dept",
						"type": "DatasetReference"
					},
					"name": "Dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SInk",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPID as string,",
				"          EMPNAME as string,",
				"          DEPTID as string,",
				"          SAL as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     mode: 'read') ~> Emp",
				"source(output(",
				"          DEPID as string,",
				"          DEPTNAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     mode: 'read') ~> Dept",
				"Emp, Dept join(DEPTID == DEPID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Emp_dept'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EMPID,",
				"          EMPNAME,",
				"          DEPTID,",
				"          SAL,",
				"          DEPID,",
				"          DEPTNAME",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}